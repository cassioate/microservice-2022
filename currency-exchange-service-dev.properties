server.port=8000
#datasource-initialization faz com que só seja inserido os itens após a criação das tabelas, por padrão ele não funciona assim
spring.datasource.url=jdbc:h2:mem:testdb
spring.h2.console.enabled=true
spring.jpa.defer-datasource-initialization=true

spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true 

resilience4j.retry.instances.sample-api.max-attempts=2
resilience4j.retry.instances.sample-api.wait-duration=5s
#o comando abaixo fará com que cada tentativa no sample-api seja feito com um acrescimo exponencial, 
#começa tentando com 5 segundos de diferença, depois 10, depois 20, depois 40 segundos.
resilience4j.retry.instances.sample-api.enable-exponential-backoff=true

#Irá permitir que serja realizado apenas 2 chamadas no periodo de 10segundos
resilience4j.ratelimiter.instances.default.limit-for-period=2
resilience4j.ratelimiter.instances.default.limit-refresh-period=10s

#Permitirá que apenas 10 chamadas sejam feitas de forma concorrente
resilience4j.bulkhead.instances.sample-api.max-concurrent-calls=10

#Aqui define a quantidade de request que quero rastrear com o zipkin, no caso está para 100%
spring.sleuth.sampler.probability=1.0
## Por default ao adc a dependencia zipkin ele tenta se conectar no endereço abaixo, caso eu utilize o zipkin em outro endereço, terei que mudar aqui tbm
##spring.zipkin.baseUrl=http://localhost:9411/

eureka.client.serviceUrl.defaultZone=http://localhost:8762/eureka