version: '3.7'

networks:
  currency-networks:
    driver: bridge

services:
  zipkin:
    container_name: zipkin
    image: openzipkin/zipkin:latest
    mem_limit: 700m
    ports:
      - "9411:9411"
    networks:
      - currency-networks
    healthcheck:
      test: wget http://localhost:9411/health || exit 1
      interval: 5s
      timeout: 30s
      retries: 25

  spring-cloud-config:
    container_name: spring-cloud-config
    build: 
      dockerfile: spring-cloud-config
      context: .
    mem_limit: 700m
    ports:
      - "8888:8888"
    networks:
      - currency-networks
    healthcheck:
      test: wget http://localhost:8888/actuator/health || exit 1
      interval: 5s
      timeout: 30s
      retries: 25
    depends_on:
      zipkin:
        condition: service_healthy

  eureka:
    container_name: eureka
    image: cassioate/eureka-server:0.0.1-SNAPSHOT
    mem_limit: 700m
    ports:
      - "8761:8761"
    restart: always
    environment:
    # aqui eu estou substituindo o "spring.config.import" que existe dentro do properties dessa aplicação (que é um variavel de ambiente),
    # mudando a palavra localhost para spring-cloud-config(nome do container), fazendo assim com que ele aponte para o localhost do container spring-cloud-config.
    # A TITULO DE INFORMAÇÃO, se eu substituir diretamente no application.properties o seguinte: "spring.config.import=optional:configserver:http://localhost:8888", ele também funcionaria, basta inserir "spring.config.import= "optional:configserver:http://microservices-2022-spring-cloud-config:8888".
      SPRING.CONFIG.IMPORT: configserver:http://spring-cloud-config:8888
    deploy:
      restart_policy:
        condition: on-failure
    networks:
      - currency-networks
    depends_on:
      spring-cloud-config:
        condition: service_healthy
      zipkin:
        condition: service_healthy

  # currency-exchange:
  #   container_name: currency-exchange
  #   image: cassioate/currency-exchange-service:0.0.1-SNAPSHOT
  #   mem_limit: 2000m
  #   ports:
  #     - "8000:8000"
  #   networks:
  #     - currency-networks
  #   depends_on:
  #     - spring-cloud-config
  #     - eureka
  #   command: timeout 60
  #   deploy:
  #     restart_policy:
  #       condition: on-failure
  #   environment:
  #     SPRING.CONFIG.IMPORT: configserver:http://spring-cloud-config:8888
  #     EUREKA.CLIENT.SERVICEURL.DEFAULTZONE: http://eureka:8761/eureka

  # currency-conversion:
  #   image: cassioate/currency-conversion-service:0.0.1-SNAPSHOT
  #   mem_limit: 700m
  #   ports:
  #     - "8100:8100"
  #   networks:
  #     - currency-networks
  #   depends_on:
  #     - spring-cloud-config
  #     - eureka
  #   environment:
  #     SPRING.CONFIG.IMPORT: optional:configserver:http://microservices-2022-spring-cloud-config:8888

  # api-gateway:
  #   image: cassioate/api-gateway:0.0.1-SNAPSHOT
  #   mem_limit: 700m
  #   ports:
  #     - "8765:8765"
  #   networks:
  #     - currency-networks
  #   depends_on:
  #     - spring-cloud-config
  #     - eureka
  #   environment:
  #     SPRING.CONFIG.IMPORT: optional:configserver:http://microservices-2022-spring-cloud-config:8888


